class Solution {
public:
    int trap(vector<int>& height) {
        //using two pointer approach like find the highest height from left side and right side and for sum add the max side - height[current] one
        int w=0;
        int n=height.size();
        int lmax=height[0];
        int rmax=height[n-1];
        int lpos=1;
        int rpos=n-2;
        while(lpos<=rpos){
            if(height[lpos]>=lmax){
                lmax=height[lpos];
                lpos++;
            }
            else if(height[rpos]>= rmax){
                rmax=height[rpos];
                rpos--;
            }
            else if(lmax<=rmax && height[lpos]<lmax){
                w+=lmax-height[lpos];
                lpos++;
            }
            else{
                w+=rmax-height[rpos];
                rpos--;
            }
        }
        return w;
    }
};
